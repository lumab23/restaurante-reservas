services:
  # Serviço do Banco de Dados MySQL
  mysql-db:
    image: mysql:8.0
    container_name: restaurante-reservas-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD} # Usa a senha do .env
      MYSQL_DATABASE: ${DB_NAME} # Usa o nome do banco do .env
      MYSQL_USER: ${DB_USERNAME} # Usa o usuário do .env
      MYSQL_PASSWORD: ${DB_PASSWORD} # Usa a senha do .env
    ports:
      - "3307:3306" # Mapeia a porta do MySQL para o host
    volumes:
      - mysql_data:/var/lib/mysql # Persiste os dados do MySQL
      - ./src/main/resources/db/schema.sql:/docker-entrypoint-initdb.d/01_schema.sql # Carrega o schema
      - ./src/main/resources/db/data.sql:/docker-entrypoint-initdb.d/02_data.sql # Carrega os dados iniciais
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DB_USERNAME}", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Serviço da Aplicação Spring Boot/JavaFX
  app:
    platform: linux/amd64
    build:
      context: . # O contexto de build é o diretório atual (onde está o Dockerfile)
      dockerfile: Dockerfile
    container_name: restaurante-reservas-app
    ports:
      - "8080:8080" # Mapeia a porta da aplicação para o host
    environment:
      DB_URL: "jdbc:mysql://mysql-db:3306/${DB_NAME}" # Conecta ao serviço mysql-db
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DRIVER: ${DB_DRIVER}
    depends_on:
      mysql-db:
        condition: service_healthy # Garante que o banco de dados esteja saudável antes de iniciar o app
    stdin_open: true # Necessário para interatividade com a UI JavaFX se houver entrada de teclado
    tty: true # Necessário para alocar um TTY, importante para aplicações de UI

volumes:
  mysql_data: